Get-AzVMDiskEncryptionStatus -ResourceGroupName "ctt-prod-vms-rg" -vmname "srv01"


#Login to VM
ssh <user>@<public_ip>

#Deprovision machine and delete machine specific files
sudo waagent -deprovision+user
exit

#Set variables
$rg = (Get-AzResourceGroup).ResourceGroupName
$myvm = az vm list --query [].name -o tsv

#Deallocate VM (may take a few minutes)
az vm deallocate `
    --resource-group $rg `
    --name $myvm

#Generalize VM
az vm generalize `
    --resource-group $rg `
    --name $myvm

#Create an Image of VM in same region as the source vm (may take a minute)
az image create `
    --resource-group $rg `
    --name myImage --source $myvm


az bicep decompile --file main.json

New-AzResourceGroupDeployment -Name Storage -ResourceGroupName ctt-prod-sta-rg -TemplateFile vm-arm-template.bicep


docker build -t myweb .

docker run -d -p 8000:80 --name web mynginx

curl localhost:8000

docker image ls

docker container ls


docker login ctt2026.azurecr.io --username ctt2026

docker tag mynginx ctt2026.azurecr.io/myimages/mynginx:latest

docker push ctt2026.azurecr.io/myimages/mynginx:latest


az deployment group create --resource-group docker --template-file azuredeploy.json


dotnet new mvc -o demowebapp

cd ./demowebapp/

dotnet publish -o pub

cd ./pub/

zip -r site.zip *

$rg = docker
$appname = "cttapp2026"

az webapp deployment source config-zip `
--src ./site.zip `
--resource-group $rg `
--name $appname




































